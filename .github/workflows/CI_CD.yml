# This is a basic workflow to help you get started with Actions

name: CI_CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  gradle:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout code
        id: checkout_code
        uses: actions/checkout@v2
      - name: Configure Java
        id: configure_java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Set up Docker Buildx
        id: setup_build_x
        uses: docker/setup-buildx-action@v1
      - name: Fix gradle wrapper
        id: fix_gradle_wrapper
        run: gradle wrapper
      - name: Publish artifact
        id: publish_artifact
        uses: eskatos/gradle-command-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          arguments: clean build bootJar publish
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.run_id }}
          release_name: Release ${{ github.run_id }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/${{ github.event.repository.name }}-0.0.${{ github.run_id }}-SNAPSHOT.jar
          asset_name: ${{ github.event.repository.name }}-0.0.${{ github.run_id }}-SNAPSHOT.jar
          asset_content_type: application/java-archive
      - name: Build and Publish Docker image
        id: build_publish_docker_versioned
        uses: VaultVulp/gp-docker-action@1.1.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          image-name: ${{ github.event.repository.name }}
          image-tag: 0.0.${{ github.run_id }}-SNAPSHOT
      - name: Login to Docker Hub
        id: login_docker_hub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        id: push_docker_hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest
            ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:0.0.${{ github.run_id }}-SNAPSHOT
      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd
            git clone https://github.com/Rich43/archesky-docker
            cd archesky-docker
            ./run.sh
            cd
            rm -rfv archesky-docker
