scalar DateTime

type Query {
    listContent: [Content!]!
    listAllRevisions(name: ID!): [ContentRevision!]!
}

input RevisionInput {
    content: String!
    summary: String
    html: Boolean!
}

type Mutation {
    createContent(name: ID!, displayName: String): Content!
    updateDisplayName(name: ID!, displayName: String): Content!
    revertContent(name: ID!, revisionId: ID!): ContentRevision!
    deleteContent(id: ID!): Boolean!
    togglePublished(name: ID!): Boolean!
    createRevision(name: ID!, revisionInput: RevisionInput!): ContentRevision!
}

type Subscription {
    updateContent(name: ID!): ContentRevision!
}

type Content {
    id: ID!
    name: String!
    displayName: String
    published: Boolean!
    latestRevision: ContentRevision
    created: DateTime
    updated: DateTime
}

type ContentRevision {
    id: ID!
    content: String!
    summary: String
    html: Boolean!
    created: DateTime
    parent: Content
}
